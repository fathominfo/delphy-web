// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { AmbSeqLetter } from '../../delphy/api/amb-seq-letter.js';


export class Amb {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Amb {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

state():AmbSeqLetter {
  return this.bb!.readUint8(this.bb_pos);
}

site():number {
  return this.bb!.readInt32(this.bb_pos + 4);
}

static sizeOf():number {
  return 8;
}

static createAmb(builder:flatbuffers.Builder, state: AmbSeqLetter, site: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeInt32(site);
  builder.pad(3);
  builder.writeInt8(state);
  return builder.offset();
}

}
